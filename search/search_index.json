{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"About madBlocks madBlocks is a maker community of Madblocks Technologies Pvt Ltd, and our intention is to create a makerspace in the campus so that our makers can be able to build something which makes them feel crazy. Thus, we are here to help them in providing a detailed documentation. To know more about us, do visit madblocks.tech . About Author Madhu Parvathaneni, a renowed mentor and developer who can strategise the things in a more detailed way. He has a rich experience over 10 years on Internet of Things, Cloud Computing, Artificial Intelligence and Robotics. Disclaimer The images shown here are the registered trademarks of the respective designers, we don't hold any kind of rights within our copyrights. The content shown here is for you to learn and do things aka projects. Please do not copy paste into your blogs, if we identify we may proceed legally.","title":"Intro"},{"location":"#about-madblocks","text":"madBlocks is a maker community of Madblocks Technologies Pvt Ltd, and our intention is to create a makerspace in the campus so that our makers can be able to build something which makes them feel crazy. Thus, we are here to help them in providing a detailed documentation. To know more about us, do visit madblocks.tech .","title":"About madBlocks"},{"location":"#about-author","text":"Madhu Parvathaneni, a renowed mentor and developer who can strategise the things in a more detailed way. He has a rich experience over 10 years on Internet of Things, Cloud Computing, Artificial Intelligence and Robotics.","title":"About Author"},{"location":"#disclaimer","text":"The images shown here are the registered trademarks of the respective designers, we don't hold any kind of rights within our copyrights. The content shown here is for you to learn and do things aka projects. Please do not copy paste into your blogs, if we identify we may proceed legally.","title":"Disclaimer"},{"location":"Micropython/GettingStarted/","text":"What is MicroPython? MicroPython is a software implementation of a programming language largely compatible with Python3, written in C, that is optimized to run on a generic microcontroller. MicroPython is a full Python compiler and runtime that runs on the microcontroller hardware. The user is presented with an interactive prompt to execute supported commands immediately. Included are a selection of core Python libraries; MicroPython includes modules which give the programmer access to low-level hardware. To know more about MicroPython, do visit MicroPython Community . Downloading MicroPython You can quickly download the MicroPython SDK from our madBlocks Dashboard. In this tutorial series of MicroPython, I'm going to use a board called NodeMCU with ESP8266 architecture. You can purchase it from our dashboard too. Step - 1: You need to open the dashboard Step - 2: You have to enter your credentials and Click Sign In Step - 3: You have to focus on dashboard menu bar Step - 4: You have to focus on Launchpad and you have to click on Git option Step - 5: You have to focus on Git ID: 107, and you have to click on Fork button Step - 6: You will get a pop-up says that we have released your file Step - 7: You have to focus on My Forks under Launchpad tab in dashboard menu bar Step - 8: You have to click on Download Git from the My Forks table Step - 9: Finally MicroPython SDK is downloaded from Dashboard Installing MicroPython After downloading the SDK zip file from our dashboard, lets understand how to install it. Ensure your NodeMCU is ready and connected at USB Port of your laptop or Desktop PC. Step - 1: The SDK Zip which is downloaded from the previous steps Step - 2: Right Click on the Zip file, and select Extract to uPyCraft_V0.30\\ Step - 3: You will be able to get a folder as this Step - 4: You will be able to see only two files in the folder as this Step - 5: You have to double click on the application, click ok to install Step - 6: You have to click on install button as shown above Step - 7: You have to click on close button as shown above Step - 8: uPyCraft IDE will open as above Step - 9: Click on Tools -> Board -> and select ESP8266 Step - 10: ESP8266 should be selected Step - 11: Click on Tools -> Serial -> and select Port Number Step - 12: Port number has to be selected as shown above Step - 13: Click on Tools -> Burn Firmware Step - 14: Select board as ESP8266, erase_flash as yes, and com to respective COM Number Step - 15: Select users as shown above and click on choose and browse to the sdk folder extracted Step - 16: Select the bin file as shown above Step - 17: Click on Ok to flash the file Step - 18: Wait until it gets flashed Step - 19: After flashing/burning, you will get as above Step - 20: Select Tools -> Port -> and Select the Port number as above Step - 21: Finally, you are MicroPython and board is ready for play. Running Program Lets execute a basic program to print your name on this platform. print ('Madhu is a Good Boy') Step - 1: Click on New File as shown above. Step - 2: Click on Save Button as shown above. Step - 3: Enter the file name and don't forget to give extension .py as shown above Step - 4: Write Program and Click Save Button as shown above Step - 5: Click Download Button as shown above, ensure NodeMCU is connected Step - 6: You can see the output in console as shown above Step - 7: You can see the downloaded script under device Step - 8: If you want to re-run the program, you can click run button as above Note: If you edit the program, you have to repeat from Step - 5. Conclusion In this tutorial, I had elaborated how to download and install MicroPython SDK from our dashboard and also I've shown you how to write a simple python script using MicroPython tool and finally I've shown you how to upload the script onto the NodeMCU board. PS: If you get any error, send us your image to our WhatsApp on 0-7893015625","title":"Tutorial - 1: Getting Started"},{"location":"Micropython/GettingStarted/#what-is-micropython","text":"MicroPython is a software implementation of a programming language largely compatible with Python3, written in C, that is optimized to run on a generic microcontroller. MicroPython is a full Python compiler and runtime that runs on the microcontroller hardware. The user is presented with an interactive prompt to execute supported commands immediately. Included are a selection of core Python libraries; MicroPython includes modules which give the programmer access to low-level hardware. To know more about MicroPython, do visit MicroPython Community .","title":"What is MicroPython?"},{"location":"Micropython/GettingStarted/#downloading-micropython","text":"You can quickly download the MicroPython SDK from our","title":"Downloading MicroPython"},{"location":"Micropython/GettingStarted/#installing-micropython","text":"After downloading the SDK zip file from our dashboard, lets understand how to install it. Ensure your NodeMCU is ready and connected at USB Port of your laptop or Desktop PC. Step - 1: The SDK Zip which is downloaded from the previous steps Step - 2: Right Click on the Zip file, and select Extract to uPyCraft_V0.30\\ Step - 3: You will be able to get a folder as this Step - 4: You will be able to see only two files in the folder as this Step - 5: You have to double click on the application, click ok to install Step - 6: You have to click on install button as shown above Step - 7: You have to click on close button as shown above Step - 8: uPyCraft IDE will open as above Step - 9: Click on Tools -> Board -> and select ESP8266 Step - 10: ESP8266 should be selected Step - 11: Click on Tools -> Serial -> and select Port Number Step - 12: Port number has to be selected as shown above Step - 13: Click on Tools -> Burn Firmware Step - 14: Select board as ESP8266, erase_flash as yes, and com to respective COM Number Step - 15: Select users as shown above and click on choose and browse to the sdk folder extracted Step - 16: Select the bin file as shown above Step - 17: Click on Ok to flash the file Step - 18: Wait until it gets flashed Step - 19: After flashing/burning, you will get as above Step - 20: Select Tools -> Port -> and Select the Port number as above Step - 21: Finally, you are MicroPython and board is ready for play.","title":"Installing MicroPython"},{"location":"Micropython/GettingStarted/#running-program","text":"Lets execute a basic program to print your name on this platform. print ('Madhu is a Good Boy') Step - 1: Click on New File as shown above. Step - 2: Click on Save Button as shown above. Step - 3: Enter the file name and don't forget to give extension .py as shown above Step - 4: Write Program and Click Save Button as shown above Step - 5: Click Download Button as shown above, ensure NodeMCU is connected Step - 6: You can see the output in console as shown above Step - 7: You can see the downloaded script under device Step - 8: If you want to re-run the program, you can click run button as above Note: If you edit the program, you have to repeat from Step - 5.","title":"Running Program"},{"location":"Micropython/GettingStarted/#conclusion","text":"In this tutorial, I had elaborated how to download and install MicroPython SDK from our dashboard and also I've shown you how to write a simple python script using MicroPython tool and finally I've shown you how to upload the script onto the NodeMCU board. PS: If you get any error, send us your image to our WhatsApp on 0-7893015625","title":"Conclusion"}]}